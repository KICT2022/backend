plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1' // Spring Boot 최신 안정 버전으로 변경
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.I2'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-validation' // 유효성 검사 추가 (선택)
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// Lombok은 annotationProcessor로 충분
	compileOnly 'org.projectlombok:lombok' // compileOnly만 유지 (annotationProcessor는 자동 포함됨)
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// JJWT 버전 0.12.x 이상으로 업데이트
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// H2 Database는 한 번만 선언
	implementation 'com.h2database:h2'
	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Swagger (Springdoc OpenAPI)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	//maridb
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.3.3'

	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'io.projectreactor:reactor-test'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.4'  // 최신 버전 확인 필요


}

tasks.named('test') {
	useJUnitPlatform()
}
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}